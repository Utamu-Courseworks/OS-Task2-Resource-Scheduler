name: CI/CD Pipeline for Flask App

# Trigger the workflow on push to main or on pull request
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        pytest  # Adjust this to your testing framework
    
  docker_build_and_push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t your-dockerhub-username/your-image-name:$GITHUB_SHA .
      
      - name: Push Docker Image
        run: |
          docker push gorret/resource-scheduler-simulation:$GITHUB_SHA
          
  deploy:
    runs-on: ubuntu-latest
    needs: docker_build_and_push
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Cloud (Heroku in this case)
        run: |
          git remote add heroku https://git.heroku.com/your-heroku-app.git
          git push heroku main
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
